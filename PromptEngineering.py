# -*- coding: utf-8 -*-
"""MSBC_5190_Lab_6_Prompt_Engineering_using_OpenAI_API.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fzFQROps-JMup4yq8y9JdSgcsNVuRBz0

## Lab 6 Prompt Engineering using OpenAI API

### Overview

In this lab, you will gain familiarity with prompting large language models (LLMs) ChatGPT. Language model prompting is the process of providing a model with an input text, and then having the model generate a response as output. For example, one could provide a language model with the prompt "The sky is" and the model might generate the response "blue".

Prompts can be used to complete a breadth of tasks such as summarization (e.g., “Summarize the following paragraph: \<paragraph written out here\> Summary:”) or extraction (e.g., “Extract the phone number from the user bio: \<bio written out here\>.”)


The lab is divided into three parts:


1. **Set up**: In the first part of the lab, you will set up the environment and data, which you will use in the remainder of the lab.

2. **Prompt development**: In the second part of the lab, you will explore a few strategies for prompt engineering. As part of this process, you may encounter both the joys and pains of prompting.  
  * On one hand, the right prompt and model can magically solve a seemingly complicated and unrelated task (w.r.t. the model's *training objective*.)  
  * On the other, prompting can be a brittle technique, and it may require time, effort, and creativity to develop a sufficient prompt.

---
### Part 1: Set-up

##### 1. Install dependencies
"""

!pip3 install openai

"""##### 2. Import necessary libraries, define helper function, and data

Next, import the necessary libraries into your Jupyter notebook. You will need to import the following libraries
"""

from openai import OpenAI

# This is my personal API key. Please consider use your own when running
# experiments.
client = OpenAI(
    api_key = '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'
)

"""Throughout this course, we will use OpenAI's gpt-3.5-turbo model and the chat completions endpoint.

This helper function will make it easier to use prompts and look at the generated outputs:
"""

model_version = "gpt-3.5-turbo" # GPT-3.5

def get_completion(prompt, model=model_version):
  completion = client.chat.completions.create(
      model = model_version,
      messages=[
          {
              "role": "user",
              "content": prompt,
          }
      ],
      temperature=0, # this is the degree of randomness of the model's output
  )
  return completion.choices[0].message.content

text = f"""
Hello, My Name is Meghan Rizzo and Ken Rubenfeld are close family friends of \
the Palmer Family. A very short time ago, Yolando became very dizzy and was \
ill for a short while; it has come to the family's attention that she was \
diagnosed with cancer throughout her body. I am just here to say that there \
is no more accurate statement when they say that a moment can change your \
life.  We are asking for donations to help Yolanda rid her body of every \
Cancer cell. The family has been trying to get her into a program at Envita \
Medical Centers, but it will be very costly. This facility doesn't want the \
insurance companies to dictate the treatment. They want the lab results to
dictate the journey best for the patient. That being said, we need to \
fundraise asap. Yolanda is loved so much by so many people. She has a very \
loving Husband, Randy her children Brent, Lance, Meghan and Conner. she also \
has 4 fur babies Bodie, Milo, Dorothy and Harley. Please help us make this
happen for Yolanda. We appreciate the outpouring of support from their close
friends and family. Please put this fundraiser up everywhere you can.
"""

"""#### Task

Above is a GoFundMe story. The goal of this lab is to rewrite the story with different emotions.

---
### Part 2: Prompt Development

In this part, we will develop prompts for ChatGPT. A prompt is a short sentence or phrase that serves as the starting point for the model's text generation (e.g., “Is the review positive or negative? \<review written here\>”).

#### 1. Generate Text
Now we will now begin prompting the model. We will begin by walking you through a few examples of different prompt formats.

#### 1.1 Prompt Technique: Zero-shot prompting

In this technique, an instruction for the task is usually specified in natural language. The model is expected to following the specification and output a correct response, **without any examples** (hence "zero shots").
"""

emotion = "angry"
prompt = f"""
    You are a fundraising copywriter, hired to help edit a fundraising text
    which is delimited by triple backticks.

    Please write a new version of the text that conveys the emotion {emotion}
    Keep the new version's total wordcount within 90% to 110% of the original
    wordcount.

    Text: ```{text}```
    """

response = get_completion(prompt)
print(response)

"""#### **Now it's your turn!**

Create and evaluate 3 different prompting templates for your task and evaluate its performance.

#### 1.2 Prompt Technique: Few-shot prompting

In this technique, we provide a **few examples** in the prompt, optionally including task instructions as well (all as natural language). Even without said instructions, our hope is that the LLM can use the examples to autoregressively complete what comes next to solve the desired task.
"""

"""
Write a few-shot prompt. Here we include a few in-context examples to the model
demonstrating how to complete the tasks
"""

prompt = f"""
Here are few examples of angry narratives:

Your task is to write a new version of the text that conveys the emotion {emotion}.
"""

response = get_completion(prompt)
print(response)

"""#### 1.3 Prompt Technique: Chain-of-thought prompting"""

emotion = "angry"
prompt = f"""
System: You are an expert in emotional psychology and you can accurately write
stories with different emotions.
Text: ```{text}```
Tasks and Steps: The above is a story from GoFundMe. Your task is to write a new
 version of the text that conveys the emotion {emotion}. You need to follow the
 steps below. Let's think step by step.
 Step 1: Describe the content and main events of the story.
 Step 2: Think about what emotions conveyed in the current story.
 Step 3: Think about how you rewrite the same story but convey emotion {emotion}

"""

response = get_completion(prompt)
print(response)